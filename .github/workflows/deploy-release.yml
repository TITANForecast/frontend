name: Deploy Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to deploy'
        required: true
        default: 'latest'

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '20'
  S3_BUCKET: 'titan-static-site-8fbf908b'
  CLOUDFRONT_DISTRIBUTION_ID: 'E1F8WGVOCZWT1K'

jobs:
  # Build and test the frontend application
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build static site
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-${{ github.ref_name }}
        path: out/
        retention-days: 7

  # Deploy to S3 and CloudFront
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build-${{ github.ref_name }}
        path: out/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to S3
      run: |
        echo "üöÄ Deploying frontend app to S3..."
        
        # Deploy static assets with long cache (1 year)
        aws s3 sync out/ s3://${{ env.S3_BUCKET }}/ \
          --delete \
          --cache-control "public, max-age=31536000, immutable" \
          --exclude "*.html" \
          --exclude "*.json" \
          --exclude "index.txt" \
          --exclude "404.txt" \
          --exclude "*/index.txt" \
          --exclude "*/404.txt"

        # Deploy HTML and JSON files with shorter cache (1 hour)
        aws s3 sync out/ s3://${{ env.S3_BUCKET }}/ \
          --delete \
          --cache-control "public, max-age=3600" \
          --include "*.html" \
          --include "*.json" \
          --exclude "*"

        # Set correct content type for index.html
        aws s3 cp s3://${{ env.S3_BUCKET }}/index.html s3://${{ env.S3_BUCKET }}/index.html \
          --content-type "text/html" \
          --cache-control "public, max-age=3600" \
          --metadata-directive "REPLACE"

        echo "‚úÖ S3 deployment completed"

    - name: Invalidate CloudFront
      run: |
        echo "üîÑ Invalidating CloudFront cache..."
        aws cloudfront create-invalidation \
          --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
        echo "‚úÖ CloudFront cache invalidation initiated"

    - name: Get deployment URL
      run: |
        URL=$(aws cloudfront get-distribution --id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --query 'Distribution.DomainName' --output text)
        echo "üåê Frontend App URL: https://$URL"
        echo "üì¶ S3 Bucket: ${{ env.S3_BUCKET }}"
        echo "üè∑Ô∏è  Release Tag: ${{ github.ref_name }}"
        echo "::notice::Frontend app deployed successfully! URL: https://$URL"

  # Security scan
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '0'

    - name: Security scan summary
      run: |
        echo "‚úÖ Security scan completed successfully"
        echo "üìä Vulnerability scan results are shown above"
        echo "üè∑Ô∏è  Release Tag: ${{ github.ref_name }}"
