
services:
  # PostgreSQL Database (simulating RDS)
  postgres:
    image: postgres:15.12
    container_name: titan-postgres-dev
    environment:
      POSTGRES_DB: titan_dev
      POSTGRES_USER: titan_admin
      POSTGRES_PASSWORD: dev_password_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U titan_admin -d titan_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - titan-network

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: titan-frontend-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      NEXT_PUBLIC_AWS_REGION: us-east-1
      NEXT_PUBLIC_COGNITO_USER_POOL_ID: us-east-1_nHfr0cgfP
      NEXT_PUBLIC_COGNITO_CLIENT_ID: 1orj1nfmmeg2cev8o0bk95s7d9
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      NEXT_PUBLIC_USE_COGNITO: "true"
      NEXT_PUBLIC_USE_MOCK_AUTH: "false"
      DATABASE_URL: postgresql://titan_admin:dev_password_123@postgres:5432/titan_dev
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: titan_dev
      DATABASE_USERNAME: titan_admin
      DATABASE_PASSWORD: dev_password_123
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev
    networks:
      - titan-network



volumes:
  postgres_data:
    driver: local

networks:
  titan-network:
    driver: bridge

